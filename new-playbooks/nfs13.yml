- 
  name: Cluster Updates
  hosts: localhost
  collections:
    - netapp.ontap
    - community.general
    - ansible.posix
  vars:
    hostname: 192.168.0.101
    username: admin
    password: Netapp1!
    vserver: svm1_cluster1
    aggr: cluster1_01_SSD_1
    root_vol: svm1_cluster1_root
    vol_name: homedirs
  tasks:
  - name: Export Create
    na_ontap_export_policy:
      state: present
      name: allow_all
      vserver: "{{ vserver }}"
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
  - name: Mod Default Policy
    na_ontap_export_policy_rule:
      state: present
      name: default
      vserver: "{{ vserver }}"
      rule_index: 1
      client_match: 0.0.0.0/0
      ro_rule: any
      rw_rule: any
      protocol: any
      super_user_security: any
      anonymous_user_id: 65534
      allow_suid: false
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false         
  - name: Export Policy Rule Create
    na_ontap_export_policy_rule:
      state: present
      name: allow_all
      vserver: "{{ vserver }}"
      rule_index: 1
      client_match: 0.0.0.0/0
      ro_rule: sys
      rw_rule: sys
      protocol: nfs
      super_user_security: none
      allow_suid: false
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
  - name: Modify volume
    netapp.ontap.na_ontap_volume:
      state: present
      name: "{{ root_vol }}"
      volume_security_style: ntfs
      vserver: "{{ vserver }}"
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
  - name: Volume Create
    na_ontap_volume:
      state: present
      name: "{{ vol_name }}"
      vserver: "{{ vserver }}"
      aggregate_name: "{{ aggr }}"
      size: 1
      size_unit: gb
      policy: allow_all
      volume_security_style: unix
      junction_path: "/{{ vol_name }}"
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
-
  name: CENTOS_SETUP
  debugger: on_failed
  hosts: centos01.demo.netapp.com
  collections:
    - ansible.posix
  tasks:
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /mnt/data
      state: directory
      mode: '0755'
